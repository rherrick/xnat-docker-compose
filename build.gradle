import groovy.json.JsonSlurper
import java.nio.file.Paths
import javax.inject.Inject

plugins {
    id "com.avast.gradle.docker-compose" version "0.10.9"
    id "io.spring.dependency-management" version "1.0.9.RELEASE"
}

group "org.nrg.xnat.containers"
version "1.7.7-ML-SNAPSHOT"

def manifest = file(hasProperty("manifest") ? property("manifest") : "manifest.json")
def json = new JsonSlurper().parse(manifest)

repositories {
    mavenLocal()
    jcenter()
    mavenCentral()
    maven { url "https://nrgxnat.jfrog.io/nrgxnat/libs-release" }
    maven { url "https://nrgxnat.jfrog.io/nrgxnat/libs-snapshot" }
}

def baseDestination = "${json.base ? (json.base.startsWith(".") ? json.base : "./" + json.base) : "."}"
def destination = { path -> Paths.get(baseDestination, path).toString() }

class CopyConfiguration extends Copy {
    @Inject
    CopyConfiguration(String name, String destination) {
        from project.configurations.getByName(name)
        into destination
    }
}

dependencyManagement.imports {
    mavenBom "org.nrg:parent:${project.version}"
}

json.findAll { !(it.key ==~ /^(base|version)$/) }.each { key, value ->
    String name = "xnat${key.capitalize()}"
    def configuration = configurations.create(name) {
        transitive = false
    }
    logger.info "Handling configuration ${name}:"
    if (value instanceof String) {
        logger.info " * ${value}"
        dependencies.add(name, value)
    } else if (value instanceof List) {
        value.each {
            logger.info " * ${it}"
            dependencies.add(name, it) }
    }
    String taskName = "copy${key.capitalize()}"
    logger.info "Creating task ${taskName}"
    tasks.create taskName, CopyConfiguration, name, destination(key)
}

task copyAll {
    dependsOn tasks.matching { Task task -> task instanceof CopyConfiguration }
}

composeBuild.dependsOn copyAll

dockerCompose {
    appOnly {
        startedServices = [ "activemq", "orthanc", "traefik", "xnat-db", "xnat-web" ]
        removeImages = "All"
    }
}

defaultTasks "composeUp"

